- name: Authenticate with GCP via service account
  command: >
    gcloud auth activate-service-account --key-file={{ gcp_credentials_file }}
  register: gcp_auth
  changed_when: false

- name: Set GCP project
  command: gcloud config set project {{ gcp_project_id }}
  register: gcp_project
  changed_when: false

- name: Terraform Init & Apply (with backend config)
  community.general.terraform:
    project_path: "{{ terraform_directory }}"
    state: present
    backend_config: "{{ terraform_backend_config | default({}) }}"
    provider_upgrade: true
    # TODO: decide if we really need this every time.
    force_init: true
  register: tf_apply_result

- name: Set Terraform output as Ansible facts
  set_fact:
    gke_static_ip: "{{ tf_apply_result.outputs.instance_ip_addr.value }}"
  when: tf_apply_result.outputs.instance_ip_addr is defined

- name: Output the GKE static IP via debug out
  debug:
    msg: "Provisioned GKE static IP: {{ gke_static_ip }}"
  when: gke_static_ip is defined

- name: Authenticate with GKE cluster
  command: >
    gcloud container clusters get-credentials {{ gke_cluster_name }}
    --zone {{ gcp_zone }}
    --project {{ gcp_project_id }}
  register: gke_auth
  changed_when: false

- name: Ensure GKE authenticated
  debug:
    msg: "GKE clusters listed from CLI {{ gke_auth }}"
  when: gke_auth is defined
