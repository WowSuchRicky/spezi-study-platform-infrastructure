INFO: Creating KIND cluster 'spezi-study-platform'...
No kind clusters found.
Creating cluster "spezi-study-platform" ...
 ‚Ä¢ Ensuring node image (kindest/node:v1.33.1) üñº  ...
 ‚úì Ensuring node image (kindest/node:v1.33.1) üñº
 ‚Ä¢ Preparing nodes üì¶   ...
 ‚úì Preparing nodes üì¶ 
 ‚Ä¢ Writing configuration üìú  ...
 ‚úì Writing configuration üìú
 ‚Ä¢ Starting control-plane üïπÔ∏è  ...
 ‚úì Starting control-plane üïπÔ∏è
 ‚Ä¢ Installing CNI üîå  ...
 ‚úì Installing CNI üîå
 ‚Ä¢ Installing StorageClass üíæ  ...
 ‚úì Installing StorageClass üíæ
Set kubectl context to "kind-spezi-study-platform"
You can now use your cluster with:

kubectl cluster-info --context kind-spezi-study-platform

Thanks for using kind! üòä
INFO: KIND cluster is ready.
INFO: Installing Argo CD...
namespace/argocd created
customresourcedefinition.apiextensions.k8s.io/applications.argoproj.io created
customresourcedefinition.apiextensions.k8s.io/applicationsets.argoproj.io created
customresourcedefinition.apiextensions.k8s.io/appprojects.argoproj.io created
serviceaccount/argocd-application-controller created
serviceaccount/argocd-applicationset-controller created
serviceaccount/argocd-dex-server created
serviceaccount/argocd-notifications-controller created
serviceaccount/argocd-redis created
serviceaccount/argocd-repo-server created
serviceaccount/argocd-server created
role.rbac.authorization.k8s.io/argocd-application-controller created
role.rbac.authorization.k8s.io/argocd-applicationset-controller created
role.rbac.authorization.k8s.io/argocd-dex-server created
role.rbac.authorization.k8s.io/argocd-notifications-controller created
role.rbac.authorization.k8s.io/argocd-redis created
role.rbac.authorization.k8s.io/argocd-server created
clusterrole.rbac.authorization.k8s.io/argocd-application-controller created
clusterrole.rbac.authorization.k8s.io/argocd-applicationset-controller created
clusterrole.rbac.authorization.k8s.io/argocd-server created
rolebinding.rbac.authorization.k8s.io/argocd-application-controller created
rolebinding.rbac.authorization.k8s.io/argocd-applicationset-controller created
rolebinding.rbac.authorization.k8s.io/argocd-dex-server created
rolebinding.rbac.authorization.k8s.io/argocd-notifications-controller created
rolebinding.rbac.authorization.k8s.io/argocd-redis created
rolebinding.rbac.authorization.k8s.io/argocd-server created
clusterrolebinding.rbac.authorization.k8s.io/argocd-application-controller created
clusterrolebinding.rbac.authorization.k8s.io/argocd-applicationset-controller created
clusterrolebinding.rbac.authorization.k8s.io/argocd-server created
configmap/argocd-cm created
configmap/argocd-cmd-params-cm created
configmap/argocd-gpg-keys-cm created
configmap/argocd-notifications-cm created
configmap/argocd-rbac-cm created
configmap/argocd-ssh-known-hosts-cm created
configmap/argocd-tls-certs-cm created
secret/argocd-notifications-secret created
secret/argocd-secret created
service/argocd-applicationset-controller created
service/argocd-dex-server created
service/argocd-metrics created
service/argocd-notifications-controller-metrics created
service/argocd-redis created
service/argocd-repo-server created
service/argocd-server created
service/argocd-server-metrics created
deployment.apps/argocd-applicationset-controller created
deployment.apps/argocd-dex-server created
deployment.apps/argocd-notifications-controller created
deployment.apps/argocd-redis created
deployment.apps/argocd-repo-server created
deployment.apps/argocd-server created
statefulset.apps/argocd-application-controller created
networkpolicy.networking.k8s.io/argocd-application-controller-network-policy created
networkpolicy.networking.k8s.io/argocd-applicationset-controller-network-policy created
networkpolicy.networking.k8s.io/argocd-dex-server-network-policy created
networkpolicy.networking.k8s.io/argocd-notifications-controller-network-policy created
networkpolicy.networking.k8s.io/argocd-redis-network-policy created
networkpolicy.networking.k8s.io/argocd-repo-server-network-policy created
networkpolicy.networking.k8s.io/argocd-server-network-policy created
INFO: Giving resources a moment to be created...
INFO: Waiting for Argo CD pods to be ready...
pod/argocd-application-controller-0 condition met
pod/argocd-applicationset-controller-6ff6f74bc9-h55c4 condition met
pod/argocd-dex-server-558dc4bd7b-z9c5f condition met
pod/argocd-notifications-controller-9977b5bd6-84vxw condition met
pod/argocd-redis-6594484976-v8xm7 condition met
pod/argocd-repo-server-845d4f5c49-z68lc condition met
pod/argocd-server-59d75f4c95-sk6mq condition met
INFO: Argo CD is ready.
INFO: Installing Tanka Config Management Plugin...
configmap/argocd-tanka-cmp created
deployment.apps/argocd-repo-server patched
INFO: Waiting for ArgoCD repo server to restart with Tanka plugin...
Waiting for deployment "argocd-repo-server" rollout to finish: 1 old replicas are pending termination...
Waiting for deployment "argocd-repo-server" rollout to finish: 1 old replicas are pending termination...
deployment "argocd-repo-server" successfully rolled out
INFO: Tanka CMP plugin is ready.
INFO: Bootstrapping Argo CD Root Application...
application.argoproj.io/root created
INFO: Waiting for ArgoCD root application to sync...
INFO: Root application sync status: , health: 
INFO: Waiting for root application to sync... (attempt 1/30)
INFO: Cleaning up...
